<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.yun.project.dao.IuserDAO">

	<!-- 유저ID 정보 조회 -->
	<select id="getUserID" resultType="String">
		SELECT * FROM MBT_USER WHERE user_id = #{ user_id }
	</select>
	
	<!-- 유저Pw 정보 조회 -->
	<select id="getUserPW" resultType="String">
		SELECT user_pw FROM MBT_USER WHERE user_id = #{ user_id }
	</select>
	
	<!-- id를 받아 인덱스 조회 -->
	<select id="getUserIDX" resultType="int">
		SELECT user_idx FROM MBT_USER WHERE user_id = #{ user_id }
	</select>
	
	<select id="getUserRank" resultType="String">
		SELECT 
			DECODE
			(
				user_rank,
				'AA', '관리자',
				'BB', '매니저',
				'CC', '유저'
			)
			user_rank
		FROM MBT_USER 
		WHERE user_id = #{ user_id }
	</select>
	
	<select id="idxUserID" resultType="int">
		SELECT user_id FROM MBT_USER WHERE user_idx = #{user_idx}
	</select>
	
	<!-- IDFIND _user_name + user_email -->
	<select id="getUserIdFind" resultType="String">
		SELECT user_id FROM MBT_USER 
		WHERE user_name = #{ param1 } AND user_email = #{ param2 } AND useYN = 'Y'
	</select>
	
	<!-- PWFIND _user_name + user_id -->
	<select id="getUserPwFind" resultType="String">
		SELECT user_pw 
		FROM MBT_USER 
		WHERE user_name = #{ param1 } AND user_id = #{ param2 } AND useYN = 'Y' 
	</select>

	<!-- 유저 회원가입 -->
	<insert id="insertUser" parameterType="com.yun.project.dto.User">
		INSERT INTO MBT_USER (user_idx, user_id, user_pw, user_name, user_email, user_phone, user_address)
		VALUES (mbt_user_seq.nextval, #{user_id}, #{user_pw}, #{user_name}, #{user_email}, #{user_phone}, #{user_address} )
	</insert>
	
	<!-- 유저 인덱스가 일치시 유저 정보 삭제 -->
	<update id="updateUseYN">
		UPDATE MBT_USER SET useYN = #{ param2 }, user_quit_reason = #{param3} WHERE user_idx= #{ param1 }
	</update>
	
	<!-- 인덱스로 유저 정보 가져오기 -->
	<select id="getMemberInfo" resultType="com.yun.project.dto.User">
		SELECT
			user_idx,		
			user_id,
			user_name,
			user_email,
			user_phone,
			DECODE
			(
				user_rank,
				'AA', '관리자',
				'BB', '매니저',
				'CC', '유저'
			)
			user_rank,
			DECODE
			(
				useYN,
				'Y', '회원',
				'N', '탈퇴',
				'비회원'
			)
			useYN,
			user_join,
			user_address,
			user_quit_reason
		FROM MBT_USER 
		WHERE user_idx = #{user_idx}
	</select>
	
	<!-- 유저 정보 업데이트 -->
	<update id="updateUserInfo">
		UPDATE MBT_USER 
		SET user_name = #{user_name}, user_email = #{user_email}, user_phone = #{user_phone}, user_address = #{user_address} 
		WHERE user_idx = #{user_idx}
	</update>
	
	<!-- 유저 비밀번호 업데이트 -->
	<update id="updatePwInfo">
		UPDATE MBT_USER SET user_pw = #{ param2 } 
		WHERE user_idx = #{param1}
	</update>
	
	
	<!-- 유저리스트 조회 -->
	<select id="userList" resultType="com.yun.project.dto.User">
		SELECT
			user_idx,
			user_id,
			DECODE
			(
				user_rank,
				'AA', '관리자',
				'BB', '매니저',
				'CC', '일반회원'
			)
			user_rank,
			DECODE
			(
				useYN,
				'Y', '회원',
				'N', '탈퇴',
				'비회원'
			)
			useYN
		FROM MBT_USER
		WHERE 1=1
		<choose>
			<when test=" useType == 'useY' ">
				and useYN like 'Y'
			</when>
			<when test=" useType == 'useN' ">
				and useYN like 'N'
			</when>
		</choose>
		ORDER BY user_idx
	</select>
	
	<!-- 관리자용 회원 영구탈퇴 (복구x) -->
	<delete id="quit">
		DELETE FROM MBT_USER 
		WHERE user_idx= #{ user_idx }
	</delete>
	
</mapper>   